/* ============================================================
 * Find a Partner Utility Class
 * ============================================================
 */
global class FAP_UrlUtils {
    
    global static String getBase(String url){
        String[] split = FAP_StringUtils.split(url, '?');
        if(split == null || split.size() == 0){
            return null;
        }
        return split[0];
    }

    global static Map<String,String> getParams(String url){
        //url -> http://google.com?api=x&xyz=123
        Map<String,String> returnMap = new Map<String,String>();
        String[] split = FAP_StringUtils.split(url, '?');
        //split -> ['http://google.com','api=x&xyz=123']
        if(split == null || split.size() != 2 || split[1] == null){
            return returnMap;
        }
        split = FAP_StringUtils.split(split[1],'&');
        //split -> ['api=x','xyz=123']
        if(split != null && split.size() > 0){
            String[] split2 = null;
            for(String keyValuePair : split){
                //keyValuePair -> 'api=x'
                split2 = FAP_StringUtils.split(keyValuePair,'=');
                returnMap.put(
                    (split2 == null || split2.size() < 1 ? '' : split2[0]),
                    EncodingUtil.urlDecode(split2 == null || split2.size() < 2 ? '' : split2[1], 'UTF-8'));
            }
        }
        return returnMap;
    }

    global static String ensureUrlBeginsWithHttp(String url){
        if(FAP_StringUtils.isNotEmpty(url)){
            final String lowerCaseUrl = FAP_StringUtils.lowerCase(url);
            if(    !FAP_StringUtils.startsWith(lowerCaseUrl, 'http://') 
              &&   !FAP_StringUtils.startsWith(lowerCaseUrl, 'https://')){
                url = 'http://' 
                    + FAP_StringUtils.stripStart(
                        (FAP_StringUtils.contains(lowerCaseUrl, '//') 
                            ? FAP_StringUtils.substringAfter(url, '//') 
                            : url)
                        ,'/:'
                    );
            }
        }
        return url;
    }

}